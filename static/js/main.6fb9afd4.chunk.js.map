{"version":3,"sources":["Redux/Reducers/SettingsReducer/Actions/index.ts","Redux/Reducers/PlanReducer/Actions/index.ts","Redux/Reducers/SettingsReducer/index.ts","Redux/Reducers/PlanReducer/index.ts","Redux/Reducers/index.ts","Images/Motorcycle.png","Components/TopNavBar/Menu/MenuButton.tsx","Components/MotionVariants/FadeInOutVariants.ts","Components/MotionVariants/SlideVariants.ts","Components/ModalBlurBg/index.tsx","Components/TopNavBar/Menu/MenuDown.tsx","Components/TopNavBar/Menu/index.tsx","Components/TopNavBar/index.tsx","Redux/Hooks/index.ts","Pages/Main/CatchPhrase.tsx","Pages/Main/index.tsx","Components/Functions/QueryParameterRelated.ts","Components/Functions/BikeClassRelated.ts","Components/CustomHook/useCopy.tsx","Components/Pages/Result/Toast.tsx","Components/Pages/Result/CardWrapper.tsx","Pages/Result/ResultCards/NoPlan/index.tsx","Pages/Result/ResultCards/WhenResult/index.tsx","Pages/Result/ResultCards/WhereResult/index.tsx","Pages/Result/ResultCards/WhoResult/RiderInfoModal.tsx","Pages/Result/ResultCards/WhoResult/index.tsx","Pages/Result/ResultCards/index.tsx","Components/Functions/ShareLinkRelated.ts","Pages/Result/IncomplemetParam.tsx","Pages/Result/index.tsx","Pages/Settings/IndividualSetting.tsx","Pages/Settings/index.tsx","Pages/NoMatch/index.tsx","Components/Pages/WritePlan/NavButton.tsx","Components/Pages/MenuIndicator.tsx","Pages/Writeplan/1where/InputCards/DestinationCard.tsx","Pages/Writeplan/1where/InputCards/URLCard.tsx","Pages/Writeplan/1where/ModalExplain.tsx","Pages/Writeplan/1where/index.tsx","Pages/Writeplan/2when/TourLength.tsx","Pages/Writeplan/2when/Calender.tsx","Pages/Writeplan/2when/DateCard/StartDate.tsx","Pages/Writeplan/2when/DateCard/EndDate.tsx","Pages/Writeplan/2when/index.tsx","Pages/Writeplan/3who/WriteInfo/NameInput.tsx","Pages/Writeplan/3who/WriteInfo/SelectBox.tsx","Pages/Writeplan/3who/WriteInfo/TelInput.tsx","Pages/Writeplan/3who/WriteInfo/index.tsx","Pages/Writeplan/3who/EditInfo/index.tsx","Pages/Writeplan/3who/InfoCard/index.tsx","Pages/Writeplan/3who/index.tsx","Pages/Writeplan/index.tsx","Components/SideNavBar/index.tsx","App.tsx","index.tsx"],"names":["ActionType","catchphraseOff","type","CATCHPHRASE_OFF","initialState","isAnimationOn","isCatchphraseOn","isExplainOn","isExplainOff","writeUrl","url","WRITE_URL","payload","writeDestination","destination","WRITE_DESTINATION","writeStartDate","startDate","SET_START_DATE","writeEndDate","endDate","SET_END_DATE","writeRiderInfo","name","tel","bikeClass","WRITE_RIDER_INFO","userInfo","persistConfig","key","storage","whitelist","rootReducer","combineReducers","SettingReducer","state","action","ANIMATION_ON","ANIMATION_OFF","CATCHPHRASE_ON","EXPLAIN_ON","EXPLAIN_OFF","PlanReducer","newArray","slice","push","EDIT_RIDER_INFO","result","map","element","index","riderIndex","RESET_RIDER_INFO","store","createStore","persistReducer","composeWithDevTools","MenuButton","isOpen","dropdownControl","motion","svg","initial","variants","opened","rotate","closed","scale","animate","onClick","className","viewBox","fill","xmlns","d","FadeInOutVariants","hidden","opacity","visible","transition","duration","exit","slideVariants","x","hiddenFromBack","mass","damping","when","staggerChildren","slideExit","ease","slideBackExit","slideBackAnimation","ModalBlurBg","closeFunc","children","closeModal","useCallback","event","target","currentTarget","useEffect","handleEsc","window","addEventListener","removeEventListener","div","role","tabIndex","onKeyDown","defaultProps","MenuDown","setIsMenuOpen","createPortal","menuElements","menuObj","to","menuName","document","getElementById","Menu","useState","isMenuOpen","prev","AnimatePresence","topNavVariants","y","TopNav","img","src","MotorCycle","alt","h1","useAppDispatch","useDispatch","useAppSelector","useSelector","CatchPhrase","dispatch","size","color","Main","paramGetter","paramList","paramsObj","encoded","get","decodeURIComponent","atob","genreArr","classArr","arrToBikeClass","arr","genre","classs","useCopy","isCopied","setIsCopied","isCopyAvailable","setIsCopyAvailable","isMessageOn","setIsMessageOn","copyToClipboard","copiableString","navigator","clipboard","writeText","then","setTimeout","catch","Toast","toastMessage","CardWrapper","NoPlan","history","useHistory","WhenResult","getFullYear","getMonth","getDate","WhereResult","length","disabled","open","exitBeforeEnter","RiderInfoModal","setIsRiderModal","riderInfoArr","Arr","riderInfo","WhoResult","userInfoArr","isRiderModal","ResultCards","destinationRedux","urlRedux","isWhereExist","isDateExist","isUserInfoExist","nothingExist","baseUrl","ENDOFADDR","indexOf","currentAddr","location","href","substring","concat","urlObj","d1","u2","sd3","ed4","ri5","uriDestinationRedux","encodeURIComponent","btoa","urlUriRedux","getTime","refinedRiderInfo","join","param","URLSearchParams","toString","shareLinkCreator","IncompleteParam","Result","search","useLocation","isCompleteParam","setIsCompleteParam","urlParsingFunc","isParamComplete","has","every","isTrue","chkParamComplete","decodedParamArr","Date","Number","split","filter","forEach","IndividualSetting","onChangeRoot","isSettingOn","settingName","settingDescription","onChange","checked","htmlFor","CATCHPHRASE","Settings","evt","evtName","evtChkd","settingsArr","isActive","propsObj","NoMatch","pathname","NavButton","placeholderBefore","placeholderAfter","setIsBack","MenuIndicator","destinationRegexp","DestinationCard","setIsDestination","defaultValue","useForm","defaultValues","register","handleSubmit","formState","setFocus","isReset","setIsReset","buttonStatus","setButtonStatus","buttonText","setButtonText","errors","destinationCheck","destinationPatternCheck","onSubmit","required","pattern","placeholder","URLCard","urlAddrCheck","urlAddrPatternCheck","ModalExplain","setIsExplain","Where","isExplain","isDestination","isBack","TourLength","setIsOneDay","isOneDay","Calender","handleChange","date","setIsCalenderOpen","calenderMsg","setCalenderMsg","selected","inline","StartDate","isCalenderOpen","startDateMsg","setStartDateMsg","selectedData","isDateLaterThanNow","EndDate","endDateMsg","setEndDateMsg","isDateLaterThanStart","When","nameRegexp","NameInput","editName","undefined","SelectBox","editBikeClass","String","value","gIndex","label","cIndex","optionValue","telRegexp","TelInput","editTel","WriteInfo","submitFunc","reset","errorText","setErrorText","isSubmitSuccessful","isSubmitted","phonePatternCheck","namePatternCheck","requiredCheck","EditInfo","setIsEditingInfo","bikeClassArr","editRiderInfo","InfoCard","isEditingInfo","bikeInfo","Who","infoCardVal","WritePlan","useRouteMatch","console","log","path","SideNavBar","App","exact","persistor","persistStore","ReactDOM","render","basename","loading"],"mappings":"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","file":"static/js/main.6fb9afd4.chunk.js","sourcesContent":["export enum ActionType {\n    ANIMATION_ON = \"ANITMATION_ON\",\n    ANIMATION_OFF = \"ANIMATION_OFF\",\n    CATCHPHRASE_ON = \"CATCHPHRASE_ON\",\n    CATCHPHRASE_OFF = \"CATCHPHRASE_OFF\",\n    EXPLAIN_ON = \"EXPLAIN_ON\",\n    EXPLAIN_OFF = \"EXPLAIN_OFF\",\n}\n\ninterface AnimationOn {\n    type: ActionType.ANIMATION_ON;\n}\ninterface AnimationOff {\n    type: ActionType.ANIMATION_OFF;\n}\ninterface CatchphraseOn {\n    type: ActionType.CATCHPHRASE_ON;\n}\ninterface CatchphraseOff {\n    type: ActionType.CATCHPHRASE_OFF;\n}\ninterface ExplainOn {\n    type: ActionType.EXPLAIN_ON;\n}\ninterface ExplainOff {\n    type: ActionType.EXPLAIN_OFF;\n}\n\nexport type SettingsAction =\n    | CatchphraseOn\n    | CatchphraseOff\n    | AnimationOn\n    | AnimationOff\n    | ExplainOn\n    | ExplainOff;\n\nexport const animationOn = (): AnimationOn => {\n    return { type: ActionType.ANIMATION_ON };\n};\nexport const animationOff = (): AnimationOff => {\n    return { type: ActionType.ANIMATION_OFF };\n};\n\nexport const catchphraseOn = (): CatchphraseOn => {\n    return { type: ActionType.CATCHPHRASE_ON };\n};\n\nexport const catchphraseOff = (): CatchphraseOff => {\n    return { type: ActionType.CATCHPHRASE_OFF };\n};\n\nexport const explainOn = (): ExplainOn => {\n    return { type: ActionType.EXPLAIN_ON };\n};\nexport const explainOff = (): ExplainOff => {\n    return { type: ActionType.EXPLAIN_OFF };\n};\n","export enum ActionType {\n    WRITE_URL = \"WRITE_URL\",\n    WRITE_DESTINATION = \"WRITE_DESTINATION\",\n    WRITE_RIDER_INFO = \"WRITE_RIDER_INFO\",\n    EDIT_RIDER_INFO = \"EDIT_RIDER_INFO\",\n    RESET_RIDER_INFO = \"RESET_RIDER_INFO\",\n    SET_START_DATE = \"SET_START_DATE\",\n    SET_END_DATE = \"SET_END_DATE\",\n}\n\ninterface URL {\n    type: ActionType.WRITE_URL;\n    payload: string | null;\n}\ninterface Destination {\n    type: ActionType.WRITE_DESTINATION;\n    payload: string | null;\n}\ninterface RiderInfo {\n    type: ActionType.WRITE_RIDER_INFO;\n    payload: { name: string; tel: number; bikeClass: number[] };\n}\ninterface SetDateInfo {\n    type: ActionType.SET_START_DATE | ActionType.SET_END_DATE;\n    payload: Date | null;\n}\n\ninterface ResetRiderInfo {\n    type: ActionType.RESET_RIDER_INFO;\n}\n\ninterface EditRiderInfo {\n    type: ActionType.EDIT_RIDER_INFO;\n    payload: { name: string; tel: number; bikeClass: number[] };\n    riderIndex: number;\n}\n\nexport type PlanAction =\n    | URL\n    | Destination\n    | RiderInfo\n    | EditRiderInfo\n    | ResetRiderInfo\n    | SetDateInfo;\n\nexport const writeUrl = (url: string | null): URL => ({\n    type: ActionType.WRITE_URL,\n    payload: url,\n});\n\nexport const writeDestination = (destination: string | null): Destination => {\n    return { type: ActionType.WRITE_DESTINATION, payload: destination };\n};\n\nexport const writeStartDate = (startDate: Date | null): SetDateInfo => {\n    return { type: ActionType.SET_START_DATE, payload: startDate };\n};\n\nexport const writeEndDate = (endDate: Date | null): SetDateInfo => {\n    return { type: ActionType.SET_END_DATE, payload: endDate };\n};\n\nexport const writeRiderInfo = (\n    name: string,\n    tel: number,\n    bikeClass: number[]\n): RiderInfo => {\n    return {\n        type: ActionType.WRITE_RIDER_INFO,\n        payload: { name, tel, bikeClass },\n    };\n};\n\nexport const editRiderInfo = (\n    name: string,\n    tel: number,\n    bikeClass: number[],\n    riderIndex: number\n): EditRiderInfo => {\n    return {\n        type: ActionType.EDIT_RIDER_INFO,\n        payload: { name, tel, bikeClass },\n        riderIndex,\n    };\n};\n\nexport const resetRiderInfo = (): ResetRiderInfo => {\n    return { type: ActionType.RESET_RIDER_INFO };\n};\n","import { ActionType, SettingsAction } from \"./Actions\";\n\ninterface SettingInfo {\n    isAnimationOn: boolean;\n    isCatchphraseOn: boolean;\n    isExplainOn: boolean;\n    isExplainOff: boolean;\n}\n\nconst initialState: SettingInfo = {\n    isAnimationOn: false,\n    isCatchphraseOn: false,\n    isExplainOn: false,\n    isExplainOff: false,\n};\n\nconst SettingReducer = (\n    state: SettingInfo = initialState,\n    action: SettingsAction\n): SettingInfo => {\n    switch (action.type) {\n        case ActionType.ANIMATION_ON:\n            return { ...state, isAnimationOn: true };\n        case ActionType.ANIMATION_OFF:\n            return { ...state, isAnimationOn: false };\n        case ActionType.CATCHPHRASE_ON:\n            return { ...state, isCatchphraseOn: true };\n        case ActionType.CATCHPHRASE_OFF:\n            return { ...state, isCatchphraseOn: false };\n        case ActionType.EXPLAIN_ON:\n            return { ...state, isExplainOn: true };\n        case ActionType.EXPLAIN_OFF:\n            return { ...state, isExplainOff: true };\n        default:\n            return state;\n    }\n};\n\nexport { SettingReducer };\nexport type { SettingInfo };\n","import { ActionType, PlanAction } from \"./Actions\";\n\ninterface PlanInfo {\n    url: string | null;\n    destination: string | null;\n    startDate: Date | null;\n    endDate: Date | null;\n    userInfo: { name: string; tel: number; bikeClass: number[] }[];\n}\n\nconst initialState: PlanInfo = {\n    url: null,\n    destination: null,\n    userInfo: [{ name: \"\", tel: 0, bikeClass: [0, 0] }],\n    startDate: null,\n    endDate: null,\n};\n\nconst PlanReducer = (\n    state: PlanInfo = initialState,\n    action: PlanAction\n): PlanInfo => {\n    switch (action.type) {\n        case ActionType.WRITE_URL: {\n            return { ...state, url: action.payload };\n        }\n\n        case ActionType.WRITE_DESTINATION: {\n            return { ...state, destination: action.payload };\n        }\n\n        case ActionType.SET_START_DATE: {\n            return { ...state, startDate: action.payload };\n        }\n\n        case ActionType.SET_END_DATE: {\n            return { ...state, endDate: action.payload };\n        }\n\n        case ActionType.WRITE_RIDER_INFO: {\n            const newArray = state.userInfo.slice();\n            newArray.push(action.payload);\n            return { ...state, userInfo: newArray };\n        }\n\n        case ActionType.EDIT_RIDER_INFO: {\n            const result = state.userInfo.map((element, index) => {\n                if (index !== action.riderIndex) {\n                    return element;\n                }\n                return action.payload;\n            });\n            return { ...state, userInfo: result };\n        }\n\n        case ActionType.RESET_RIDER_INFO: {\n            return {\n                ...state,\n                userInfo: [{ name: \"\", tel: 0, bikeClass: [0, 0] }],\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport { PlanReducer };\nexport type { PlanInfo };\n","import { combineReducers, createStore } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport storage from \"redux-persist/lib/storage\";\nimport { persistReducer } from \"redux-persist\";\n\nimport { SettingReducer } from \"./SettingsReducer\";\nimport { PlanReducer } from \"./PlanReducer\";\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n    whitelist: [\"SettingReducer\"],\n};\n\nconst rootReducer = combineReducers({ SettingReducer, PlanReducer });\nexport const store = createStore(\n    persistReducer(persistConfig, rootReducer),\n    composeWithDevTools()\n);\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof rootReducer>;\n","export default __webpack_public_path__ + \"static/media/Motorcycle.b4919f3e.png\";","import { FunctionComponent } from \"react\";\nimport { motion } from \"framer-motion\";\n\ninterface MenuButtonProps {\n    isOpen: boolean;\n    dropdownControl(): void;\n}\n\nexport const MenuButton: FunctionComponent<MenuButtonProps> = ({\n    isOpen,\n    dropdownControl,\n}) => {\n    const iconVariants = {\n        opened: { rotate: 45 },\n        closed: { rotate: 0, scale: 2 },\n    };\n    return (\n        <motion.svg\n            initial={false}\n            variants={iconVariants}\n            animate={isOpen ? \"opened\" : \"closed\"}\n            onClick={dropdownControl}\n            className=\"h-6 w-6 relative z-20 cursor-pointer\"\n            viewBox=\"0 0 24 24\"\n            fill=\"none\"\n            xmlns=\"http://www.w3.org/2000/=svg\"\n        >\n            <path\n                d=\"M12 4C11.4477 4 11 4.44772 11 5V11H5C4.44772 11 4 11.4477 4 12C4 12.5523 4.44772 13 5 13H11V19C11 19.5523 11.4477 20 12 20C12.5523 20 13 19.5523 13 19V13H19C19.5523 13 20 12.5523 20 12C20 11.4477 19.5523 11 19 11H13V5C13 4.44772 12.5523 4 12 4Z\"\n                fill=\"currentColor\"\n            />\n        </motion.svg>\n    );\n};\n","const variants = {\n    hidden: { opacity: 0 },\n    visible: {\n        opacity: 1,\n        transition: { duration: 0.4 },\n    },\n    exit: { opacity: 0 },\n};\n\nexport const FadeInOutVariants = {\n    variants,\n    initial: \"hidden\",\n    animate: \"visible\",\n    exit: \"exit\",\n};\n","export const slideVariants = {\n    hidden: { opacity: 0, x: \"10vw\" },\n    hiddenFromBack: { opacity: 0, x: \"-10vw\" },\n    visible: {\n        opacity: 1,\n        x: 0,\n        transition: {\n            type: \"spring\",\n            mass: 0.4,\n            damping: 8,\n            when: \"beforeChildren\",\n            staggerChildren: 0.4,\n        },\n    },\n    slideExit: { x: \"-10vw\", opacity: 0, transition: { ease: \"easeInOut\" } },\n    slideBackExit: {\n        x: \"10vw\",\n        opacity: 0,\n        transition: { ease: \"easeInOut\" },\n    },\n};\n\nexport const slideBackAnimation = {\n    variants: slideVariants,\n    initial: \"hidden\",\n    exit: \"slideBackExit\",\n    animate: \"visible\",\n};\n","import { FadeInOutVariants } from \"@Components/MotionVariants\";\nimport { motion } from \"framer-motion\";\nimport { FunctionComponent, useEffect, MouseEvent, useCallback } from \"react\";\n\ninterface ModalBlurBgInterface {\n    closeFunc?(): void;\n}\n\nexport const ModalBlurBg: FunctionComponent<ModalBlurBgInterface> = ({\n    closeFunc,\n    children,\n}) => {\n    const closeModal = useCallback(\n        (event?: MouseEvent<HTMLElement>): void => {\n            if (event?.target === event?.currentTarget) {\n                closeFunc?.();\n            }\n        },\n        [closeFunc]\n    );\n    useEffect(() => {\n        const handleEsc = (event: KeyboardEvent): void => {\n            if (event.key === \"Escape\") {\n                closeModal();\n            }\n        };\n        window.addEventListener(\"keydown\", handleEsc);\n        return () => {\n            window.removeEventListener(\"keydown\", handleEsc);\n        };\n    }, [closeModal]);\n\n    return (\n        <motion.div\n            {...FadeInOutVariants}\n            className=\"fixed right-0 top-0 w-full h-full bg-gray-600 bg-opacity-50 backdrop-filter backdrop-blur-sm z-20 cursor-default\"\n            onClick={closeModal}\n            role=\"button\"\n            tabIndex={-1}\n            onKeyDown={() => null}\n        >\n            {children}\n        </motion.div>\n    );\n};\nconst defaultProps = {\n    closeFunc: () => {\n        (\"\");\n    },\n};\nModalBlurBg.defaultProps = defaultProps;\n","import { ModalBlurBg } from \"@Components/ModalBlurBg\";\nimport { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Link } from \"react-router-dom\";\nimport { menuElements } from \"./index\";\n\ninterface MenuDownProps {\n    setIsMenuOpen: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const MenuDown: FunctionComponent<MenuDownProps> = ({\n    setIsMenuOpen,\n}) => {\n    const closeFunc = (): void => {\n        setIsMenuOpen(false);\n    };\n\n    return createPortal(\n        <ModalBlurBg closeFunc={closeFunc}>\n            <div className=\"relative top-1/4 left-1/2 transform -translate-x-1/2 bg-white w-10/12 max-w-lg rounded-md overflow-hidden\">\n                {menuElements.map((menuObj) => (\n                    <Link\n                        key={menuObj.menuName}\n                        to={menuObj.to}\n                        className=\"block px-4 py-2 text-gray-700 hover-hover:hover:bg-gray-200 hover-hover:active:bg-gray-300 active:bg-gray-300  text-center\"\n                        onClick={closeFunc}\n                    >\n                        {menuObj.menuName}\n                    </Link>\n                ))}\n            </div>\n        </ModalBlurBg>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { AnimatePresence } from \"framer-motion\";\nimport { FunctionComponent, useState } from \"react\";\n\nimport { MenuButton } from \"./MenuButton\";\nimport { MenuDown } from \"./MenuDown\";\n\ninterface MenuElementsType {\n    to: string;\n    menuName: string;\n}\n\nexport const menuElements: MenuElementsType[] = [\n    { to: \"/\", menuName: \"홈\" },\n    { to: \"/writeplan/1where\", menuName: \"계획 작성하기!\" },\n    { to: \"/result\", menuName: \"결과\" },\n    { to: \"/settings\", menuName: \"설정\" },\n];\n\nexport const Menu: FunctionComponent = () => {\n    const [isMenuOpen, setIsMenuOpen] = useState(false);\n    const dropdownControl = (): void => {\n        setIsMenuOpen((prev) => !prev);\n    };\n\n    return (\n        <div className=\"relative sm:mr-4 lg:invisible\">\n            <MenuButton isOpen={isMenuOpen} dropdownControl={dropdownControl} />\n            <AnimatePresence>\n                {isMenuOpen && <MenuDown setIsMenuOpen={setIsMenuOpen} />}\n            </AnimatePresence>\n        </div>\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { Link } from \"react-router-dom\";\n\nimport MotorCycle from \"@Images/Motorcycle.png\";\nimport { Menu } from \"./Menu\";\n\nconst topNavVariants = {\n    hidden: { y: \"-10vh\" },\n    visible: {\n        y: \"0\",\n        transition: { duration: 0.3 },\n    },\n};\n\nexport const TopNav: FunctionComponent = () => {\n    return (\n        <motion.div\n            variants={topNavVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            className=\" bg-blue-600 fixed max-w-none mx-auto inset-x-0 top-0 shadow-md px-3 z-10\"\n        >\n            <div className=\" flex items-center justify-between\">\n                <div className=\"flex items-end \">\n                    <Link to=\"/\">\n                        <motion.img\n                            animate={{ x: 0, opacity: 1 }}\n                            transition={{ duration: 0.5 }}\n                            initial={{ x: 100, opacity: 0 }}\n                            className=\"h-16 w-16 mr-2 translate-y-10\"\n                            src={MotorCycle}\n                            alt=\"motocycle logo\"\n                        />\n                    </Link>\n                    <Link to=\"/\">\n                        <motion.h1\n                            animate={{ x: 0, opacity: 1 }}\n                            transition={{ duration: 0.5 }}\n                            initial={{ x: 100, opacity: 0 }}\n                            className=\"text-xl sm:text-2xl text-gray-200 mb-2\"\n                        >\n                            Who Goes First?\n                        </motion.h1>\n                    </Link>\n                </div>\n                <div>\n                    <Menu />\n                </div>\n            </div>\n        </motion.div>\n    );\n};\n","import { TypedUseSelectorHook, useDispatch, useSelector } from \"react-redux\";\nimport type { RootState, AppDispatch } from \"@Redux/Reducers\";\nimport { Dispatch } from \"redux\";\nimport { SettingsAction } from \"@Redux/Reducers/SettingsReducer/Actions\";\nimport { PlanAction } from \"@Redux/Reducers/PlanReducer/Actions\";\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = (): Dispatch<SettingsAction | PlanAction> =>\n    useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { FunctionComponent } from \"react\";\nimport { IoIosClose } from \"react-icons/io\";\nimport { catchphraseOff } from \"@Redux/Reducers/SettingsReducer/Actions\";\nimport { useAppDispatch } from \"@Redux/Hooks\";\n\nexport const CatchPhrase: FunctionComponent = () => {\n    const dispatch = useAppDispatch();\n    const closeCatchphrase = (): void => {\n        dispatch(catchphraseOff());\n    };\n\n    return (\n        <div className=\"relative mx-5\">\n            <span className=\"sm:text-xl font-bold text-gray-900\">\n                네비찍고.. 인원 체크하고..\n            </span>\n            <button\n                type=\"button\"\n                onClick={closeCatchphrase}\n                className=\"relative transform translate-y-2\"\n            >\n                <IoIosClose size={30} color=\"gray\" />\n            </button>\n            <p className=\"sm:text-xl font-bold text-gray-900\">\n                도착지 주소 확인하고..\n            </p>\n\n            <p className=\"text-blue-600 my-3 text-xl sm:text-2xl font-bold\">\n                이제는\n                <br />\n                Who Goes First로\n                <br /> 로드가 작성 후 공유!\n            </p>\n\n            <p className=\"text-gray-600 text-justify\">\n                투어전 URL 클릭만 하면 투어관련 정보 모두 간단하게 공유하고\n                확인!\n            </p>\n        </div>\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { motion } from \"framer-motion\";\nimport { useAppSelector } from \"@Redux/Hooks\";\n\nimport { CatchPhrase } from \"@Pages/Main/CatchPhrase\";\nimport { FadeInOutVariants } from \"@Components/MotionVariants\";\nimport { Link } from \"react-router-dom\";\nimport { ExplainModal } from \"./ExplainModal\";\n\nexport const Main: FunctionComponent = () => {\n    const isCatchphraseOn = useAppSelector(\n        (state) => state.SettingReducer.isCatchphraseOn\n    );\n    return (\n        <motion.div {...FadeInOutVariants}>\n            {isCatchphraseOn && <CatchPhrase />}\n            {/* <ExplainModal /> */}\n            <Link to=\"/writeplan/1where\">\n                <button\n                    type=\"button\"\n                    className=\"whiteHover p-3 mt-10 rounded-lg shadow-lg relative left-1/2 transform -translate-x-1/2 text-md \"\n                >\n                    투어 계획 작성하기!\n                </button>\n            </Link>\n        </motion.div>\n    );\n};\n","interface decodeParamInterface {\n    (encoded: string): string;\n}\n\ninterface chkParamCompleteInterface {\n    (paramArr: string[], paramsObj: URLSearchParams): boolean;\n}\n\ninterface paramGetterInterface {\n    (paramArr: string[], paramsObj: URLSearchParams): string[];\n}\n\n// decode Base64, URL Encoded string\nconst decodeParam: decodeParamInterface = (encoded) => {\n    return decodeURIComponent(atob(encoded));\n};\n\n// check if query has all parameters that it's required\nexport const chkParamComplete: chkParamCompleteInterface = (\n    paramList,\n    paramsObj\n) => {\n    return paramList\n        .map((element) => paramsObj.has(element))\n        .every((isTrue) => isTrue === true);\n};\n\n// return only values of decode parameters\nexport const paramGetter: paramGetterInterface = (paramList, paramsObj) => {\n    const decodedParamArr = paramList.map((element) =>\n        decodeParam(paramsObj.get(element) as string)\n    );\n    return decodedParamArr;\n};\n","interface arrToBikeClassInterface {\n    (arr: number[]): string;\n}\nexport const genreArr = [\n    \"알차 / 네이키드\",\n    \"투어러 / 어드벤쳐\",\n    \"할리 / 클래식\",\n];\n\nexport const classArr = [\"엔트리급\", \"미들급\", \"리터급\"];\n\nexport const arrToBikeClass: arrToBikeClassInterface = (arr) => {\n    const genre = genreArr[arr[0]];\n    const classs = classArr[arr[1]];\n    return `${genre} - ${classs}`;\n};\n","import { useState } from \"react\";\n\ninterface useCopyInterFace {\n    isCopied: boolean;\n    isCopyAvailable: boolean;\n    isMessageOn: boolean;\n    copyToClipboard: (copiableString: string) => void;\n}\n\nexport const useCopy = (): useCopyInterFace => {\n    const [isCopied, setIsCopied] = useState(false);\n    const [isCopyAvailable, setIsCopyAvailable] = useState(true);\n    const [isMessageOn, setIsMessageOn] = useState(false);\n\n    const copyToClipboard = (copiableString: string): void => {\n        navigator?.clipboard\n            ?.writeText(copiableString)\n            .then(() => {\n                setIsCopied(true);\n                setIsMessageOn(true);\n                setTimeout(() => {\n                    setIsCopied(false);\n                    setIsMessageOn(false);\n                }, 3000);\n            })\n            .catch(() => {\n                setIsCopyAvailable(false);\n                setIsMessageOn(true);\n                setTimeout(() => {\n                    setIsCopyAvailable(true);\n                    setIsMessageOn(false);\n                }, 3000);\n            });\n    };\n\n    return { isCopied, isCopyAvailable, isMessageOn, copyToClipboard };\n};\n","import { FadeInOutVariants } from \"@Components/MotionVariants\";\nimport { motion } from \"framer-motion\";\nimport { FunctionComponent } from \"react\";\nimport { createPortal } from \"react-dom\";\n\ninterface ToastInterface {\n    toastMessage: string;\n}\n\nexport const Toast: FunctionComponent<ToastInterface> = ({ toastMessage }) => {\n    return createPortal(\n        <motion.div\n            {...FadeInOutVariants}\n            className=\"fixed bottom-0 right-0 h-1/4 w-full bg-gradient-to-t from-gray-500 to-transparent\"\n        >\n            <p className=\"w-56 text-center absolute bottom-1/4 bg-white shadow-lg py-2 px-3 rounded-lg left-1/2 transform -translate-x-1/2\">\n                {toastMessage}\n            </p>\n        </motion.div>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { FunctionComponent } from \"react\";\n\nexport const CardWrapper: FunctionComponent = ({ children }) => {\n    return (\n        <div className=\"w-full mb-6 p-3 bg-white rounded-lg shadow-lg relative\">\n            {children}\n        </div>\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport { ModalBlurBg } from \"@Components/ModalBlurBg\";\nimport { CardWrapper } from \"@Components/Pages/Result\";\n\nexport const NoPlan: FunctionComponent = () => {\n    const history = useHistory();\n    const toHome = (): void => {\n        history.push(\"/\");\n    };\n    return createPortal(\n        <ModalBlurBg>\n            <div className=\"relative top-1/4 w-64 sm:w-80 mx-auto\">\n                <CardWrapper>\n                    <p className=\"text-lg\">투어 계획이 존재하지 않습니다!</p>\n                    <p className=\"text-gray-600\">\n                        계획을 작성한 후 해당 페이지를 방문해주세요\n                    </p>\n                    <button\n                        type=\"button\"\n                        className=\"grayBtn block mt-3 mx-auto\"\n                        onClick={toHome}\n                    >\n                        홈으로\n                    </button>\n                </CardWrapper>\n            </div>\n        </ModalBlurBg>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { CardWrapper } from \"@Components/Pages/Result\";\n\ninterface WhenResultInterface {\n    startDate: Date | null;\n    endDate: Date | null;\n}\n\nexport const WhenResult: FunctionComponent<WhenResultInterface> = ({\n    startDate,\n    endDate,\n}) => {\n    return (\n        <CardWrapper>\n            <p className=\"text-blue-700\">날짜</p>\n            <p className=\"text-center text-xl text-gray-700 font-bold\">\n                {startDate?.getFullYear()}년\n                {startDate && startDate?.getMonth() + 1}월{startDate?.getDate()}\n                일\n            </p>\n            {endDate && (\n                <>\n                    <p className=\"text-center text-xl text-gray-700 font-bold\">\n                        ~ {endDate?.getFullYear()}년{endDate?.getMonth() + 1}월\n                        {endDate?.getDate()}일\n                    </p>\n                </>\n            )}\n        </CardWrapper>\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { CardWrapper } from \"@Components/Pages/Result\";\nimport { Toast } from \"@Components/Pages/Result/Toast\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { useCopy } from \"@Components/CustomHook/useCopy\";\n\ninterface WhereResultInterface {\n    destination: string | null;\n    url: string | null;\n}\n\nexport const WhereResult: FunctionComponent<WhereResultInterface> = ({\n    destination,\n    url,\n}) => {\n    const { isCopied, isCopyAvailable, isMessageOn, copyToClipboard } =\n        useCopy();\n\n    const toNavi = (): void => {\n        if (typeof url === \"string\") window.open(url);\n    };\n    const onCopyClick = (): void => {\n        if (typeof url === \"string\") copyToClipboard(url);\n    };\n    return (\n        <>\n            <CardWrapper>\n                <p className=\"text-blue-700\">목적지</p>\n                <p className=\"text-center text-xl text-gray-700 font-bold\">\n                    {destination}\n                </p>\n            </CardWrapper>\n            {url && (\n                <CardWrapper>\n                    <p className=\"text-blue-700 mb-2\">네비링크</p>\n                    <div className=\"flex flex-col\">\n                        <p className=\"text-xl text-gray-700 font-bold text-center mb-2\">\n                            {url.length < 14 ? url : `${url.slice(0, 14)}...`}\n                        </p>\n                        <div className=\"flex justify-center\">\n                            <button\n                                disabled={isMessageOn}\n                                type=\"button\"\n                                className=\"grayBtn sm:mr-4 mr-1\"\n                                onClick={onCopyClick}\n                            >\n                                복사하기\n                            </button>\n                            <button\n                                type=\"button\"\n                                className=\"grayBtn\"\n                                onClick={toNavi}\n                            >\n                                이동하기\n                            </button>\n                        </div>\n                    </div>\n                    <AnimatePresence exitBeforeEnter>\n                        {isCopied && (\n                            <Toast toastMessage=\"네비링크가 클립보드에 복사됐습니다.\" />\n                        )}\n                        {isCopyAvailable === false && (\n                            <Toast toastMessage=\"접속환경으로 인해 복사가 불가능합니다.\" />\n                        )}\n                    </AnimatePresence>\n                </CardWrapper>\n            )}\n        </>\n    );\n};\n","import { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { ModalBlurBg } from \"@Components/ModalBlurBg\";\nimport { useAppSelector } from \"@Redux/Hooks\";\nimport { InfoCard } from \"@Pages/Writeplan/3who/InfoCard\";\nimport { motion } from \"framer-motion\";\nimport { slideBackAnimation } from \"@Components/MotionVariants/SlideVariants\";\nimport { arrToBikeClass } from \"@Components/Functions\";\n\ninterface RiderInfoModalInterface {\n    setIsRiderModal: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const RiderInfoModal: FunctionComponent<RiderInfoModalInterface> = ({\n    setIsRiderModal,\n}) => {\n    const riderInfoArr = useAppSelector((state) => state.PlanReducer.userInfo);\n    const Arr = riderInfoArr.slice(1, riderInfoArr.length);\n\n    const closeRiderInfo = (): void => {\n        setIsRiderModal(false);\n    };\n    return createPortal(\n        <ModalBlurBg closeFunc={closeRiderInfo}>\n            <div className=\"relative top-1/4\">\n                {Arr.map((riderInfo) => {\n                    return (\n                        <motion.div {...slideBackAnimation}>\n                            <div className=\"bg-white my-2 px-4 py-2 rounded-lg shadow-lg relative w-64 sm:w-80 mx-auto\">\n                                <div className=\"block sm:flex sm:justify-between\">\n                                    <span className=\"font-semibold block sm:inline\">\n                                        {riderInfo.name}\n                                    </span>\n                                    <span className=\"text-gray-500\">\n                                        {arrToBikeClass(riderInfo.bikeClass)}\n                                    </span>\n                                </div>\n                                <p>{riderInfo.tel}</p>\n                            </div>\n                        </motion.div>\n                    );\n                })}\n            </div>\n        </ModalBlurBg>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { CardWrapper } from \"@Components/Pages/Result\";\nimport { AnimatePresence } from \"framer-motion\";\nimport { FunctionComponent, useState } from \"react\";\nimport { RiderInfoModal } from \"./RiderInfoModal\";\n\ninterface UserInfoArrInterface {\n    name: string;\n    tel: number;\n    bikeClass: number[];\n}\ninterface WhoResultInterface {\n    userInfoArr: UserInfoArrInterface[];\n}\nexport const WhoResult: FunctionComponent<WhoResultInterface> = ({\n    userInfoArr,\n}) => {\n    const [isRiderModal, setIsRiderModal] = useState(false);\n\n    const showRiderInfo = (): void => {\n        setIsRiderModal(true);\n    };\n\n    return (\n        <CardWrapper>\n            <p className=\"text-blue-700\">인원</p>\n            <p className=\"text-xl text-gray-700 font-bold text-center mb-12\">\n                {userInfoArr.length - 1}명\n            </p>\n            <button\n                type=\"button\"\n                className=\"absolute grayBtn rounded-t-none w-full left-0 bottom-0\"\n                onClick={showRiderInfo}\n            >\n                더보기\n            </button>\n            <AnimatePresence exitBeforeEnter>\n                {isRiderModal && (\n                    <RiderInfoModal setIsRiderModal={setIsRiderModal} />\n                )}\n            </AnimatePresence>\n        </CardWrapper>\n    );\n};\n","import { AnimatePresence } from \"framer-motion\";\nimport { FunctionComponent } from \"react\";\nimport { useCopy } from \"@Components/CustomHook\";\nimport { Toast } from \"@Components/Pages/Result/Toast\";\nimport { shareLinkCreator } from \"@Components/Functions\";\nimport { useAppSelector } from \"@Redux/Hooks\";\nimport { NoPlan } from \"./NoPlan\";\nimport { WhenResult } from \"./WhenResult\";\nimport { WhereResult } from \"./WhereResult\";\nimport { WhoResult } from \"./WhoResult\";\n\nexport const ResultCards: FunctionComponent = () => {\n    const destinationRedux = useAppSelector(\n        (state) => state.PlanReducer.destination\n    );\n    const urlRedux = useAppSelector((state) => state.PlanReducer.url);\n    const startDate = useAppSelector((state) => state.PlanReducer.startDate);\n    const endDate = useAppSelector((state) => state.PlanReducer.endDate);\n    const riderInfoArr = useAppSelector((state) => state.PlanReducer.userInfo);\n\n    const { isCopied, isCopyAvailable, isMessageOn, copyToClipboard } =\n        useCopy();\n\n    const isWhereExist = destinationRedux || urlRedux;\n    const isDateExist = startDate || endDate;\n    const isUserInfoExist = riderInfoArr.length > 1;\n    const nothingExist = !(isWhereExist || isDateExist || isUserInfoExist);\n\n    const shareFunction = (): void => {\n        copyToClipboard(\n            shareLinkCreator(\n                window.location.href,\n                destinationRedux,\n                urlRedux,\n                startDate,\n                endDate,\n                riderInfoArr\n            )\n        );\n    };\n\n    return (\n        <>\n            {isWhereExist && (\n                <WhereResult destination={destinationRedux} url={urlRedux} />\n            )}\n            {isDateExist && (\n                <WhenResult startDate={startDate} endDate={endDate} />\n            )}\n            {isUserInfoExist && <WhoResult userInfoArr={riderInfoArr} />}\n            {nothingExist === true ? (\n                <NoPlan />\n            ) : (\n                <button\n                    type=\"button\"\n                    className=\"whiteHover mt-10 block mx-auto mb-6 p-4 py-3 rounded-lg shadow-lg\"\n                    onClick={shareFunction}\n                    disabled={isMessageOn}\n                >\n                    공유링크 복사하기\n                </button>\n            )}\n            <AnimatePresence exitBeforeEnter>\n                {isCopied && (\n                    <Toast toastMessage=\"공유링크가 클립보드에 복사됐습니다.\" />\n                )}\n                {isCopyAvailable === false && (\n                    <Toast toastMessage=\"접속환경으로 인해 복사가 불가능합니다.\" />\n                )}\n            </AnimatePresence>\n        </>\n    );\n};\n","interface RiderInfoArrInterface {\n    name: string;\n    tel: number;\n    bikeClass: number[];\n}\n\ninterface ShareLinkCreator {\n    (\n        baseUrl: string,\n        destinationRedux: string | null,\n        urlRedux: string | null,\n        startDate: Date | null,\n        endDate: Date | null,\n        riderInfo: RiderInfoArrInterface[]\n    ): string;\n}\n\nexport const shareLinkCreator: ShareLinkCreator = (\n    baseUrl,\n    destinationRedux,\n    urlRedux,\n    startDate,\n    endDate,\n    riderInfo\n) => {\n    const AFTERHTTPS = 7;\n    const ENDOFADDR = baseUrl.indexOf(\"/result\", AFTERHTTPS); // https다음 주소만\n\n    const currentAddr = window.location.href\n        .substring(0, ENDOFADDR)\n        .concat(\"/result?\"); // 주소\n\n    const urlObj = {\n        d1: \"\",\n        u2: \"\",\n        sd3: \"\",\n        ed4: \"\",\n        ri5: \"\",\n    };\n\n    if (typeof destinationRedux === \"string\") {\n        const uriDestinationRedux = encodeURIComponent(destinationRedux);\n        urlObj.d1 = btoa(uriDestinationRedux);\n    }\n    if (typeof urlRedux === \"string\") {\n        const urlUriRedux = encodeURIComponent(urlRedux);\n        urlObj.u2 = btoa(urlUriRedux);\n    }\n    if (startDate !== null) {\n        urlObj.sd3 = btoa(`${startDate.getTime()}`);\n    }\n    if (endDate !== null) {\n        urlObj.ed4 = btoa(`${endDate.getTime()}`);\n    }\n    const refinedRiderInfo = riderInfo.slice(1, riderInfo.length);\n    if (refinedRiderInfo !== null) {\n        const riderInfoArr = refinedRiderInfo.map(\n            (element) =>\n                `${element.name}/${element.tel}/${element.bikeClass.join(\"\")}-`\n        );\n        urlObj.ri5 = btoa(encodeURIComponent(riderInfoArr.join(\"\")));\n    }\n    const param = new URLSearchParams(urlObj);\n    const resultUrl = `${currentAddr}${param.toString()}`;\n    return resultUrl;\n};\n","import { ModalBlurBg } from \"@Components/ModalBlurBg\";\nimport { CardWrapper } from \"@Components/Pages/Result\";\nimport { FunctionComponent } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useHistory } from \"react-router\";\n\nexport const IncompleteParam: FunctionComponent = () => {\n    const history = useHistory();\n    const toHome = (): void => {\n        history.push(\"/\");\n    };\n\n    return createPortal(\n        <ModalBlurBg>\n            <div className=\"relative top-1/4 w-64 sm:w-80 mx-auto\">\n                <CardWrapper>\n                    <p className=\"text-lg\">잘못된 공유 링크입니다.</p>\n                    <p className=\"text-gray-600\">\n                        정상적인 링크를 입력해주세요!\n                    </p>\n\n                    <button\n                        type=\"button\"\n                        className=\"grayBtn block mt-3 mx-auto\"\n                        onClick={toHome}\n                    >\n                        홈으로\n                    </button>\n                </CardWrapper>\n            </div>\n        </ModalBlurBg>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { FunctionComponent, useCallback, useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router\";\nimport { motion } from \"framer-motion\";\nimport { chkParamComplete, paramGetter } from \"@Components/Functions\";\nimport { FadeInOutVariants } from \"@Components/MotionVariants\";\nimport { useAppDispatch } from \"@Redux/Hooks\";\nimport {\n    writeDestination,\n    writeEndDate,\n    writeRiderInfo,\n    writeStartDate,\n    writeUrl,\n} from \"@Redux/Reducers/PlanReducer/Actions\";\nimport { ResultCards } from \"./ResultCards\";\nimport { IncompleteParam } from \"./IncomplemetParam\";\n\nexport const Result: FunctionComponent = () => {\n    const { search } = useLocation();\n    const dispatch = useAppDispatch();\n\n    const [isCompleteParam, setIsCompleteParam] = useState(true);\n\n    const urlParsingFunc = useCallback((): void => {\n        const paramList = [\"d1\", \"u2\", \"sd3\", \"ed4\", \"ri5\"];\n        const paramsObj = new URLSearchParams(search);\n        const isParamComplete = chkParamComplete(paramList, paramsObj);\n        if (search === \"\") {\n            return;\n        }\n        if (isParamComplete === false) {\n            setIsCompleteParam(false);\n            return;\n        }\n        if (search !== \"\") {\n            try {\n                const decodedParamArr = paramGetter(paramList, paramsObj);\n                if (decodedParamArr[0] !== \"\")\n                    dispatch(writeDestination(decodedParamArr[0]));\n                if (decodedParamArr[1] !== \"\")\n                    dispatch(writeUrl(decodedParamArr[1]));\n                if (decodedParamArr[2] !== \"\") {\n                    const startDate = new Date(Number(decodedParamArr[2]));\n                    dispatch(writeStartDate(startDate));\n                }\n                if (decodedParamArr[3] !== \"\") {\n                    const endDate = new Date(Number(decodedParamArr[3]));\n                    dispatch(writeEndDate(endDate));\n                }\n                if (decodedParamArr[4] !== \"\") {\n                    // to solve \"one more element issue\" -> filter\n                    const riderInfoArr = decodedParamArr[4]\n                        .split(\"-\")\n                        .filter((element) => element.length !== 0);\n\n                    // rider's array\n                    const riderInfo = riderInfoArr.map((element) =>\n                        element.split(\"/\")\n                    );\n                    riderInfo.forEach((element) => {\n                        dispatch(\n                            writeRiderInfo(element[0], Number(element[1]), [\n                                Number(element[2][0]),\n                                Number(element[2][1]),\n                            ])\n                        );\n                    });\n                }\n            } catch {\n                setIsCompleteParam(false);\n            }\n        }\n    }, [dispatch, search]);\n\n    useEffect(() => {\n        urlParsingFunc();\n    }, [urlParsingFunc]);\n\n    return (\n        <motion.div {...FadeInOutVariants} className=\"w-64 sm:w-80 mx-auto\">\n            {isCompleteParam === true ? <ResultCards /> : <IncompleteParam />}\n        </motion.div>\n    );\n};\n","import { FunctionComponent, ChangeEventHandler } from \"react\";\n\ninterface props {\n    onChangeRoot: ChangeEventHandler<HTMLInputElement>;\n    isSettingOn: boolean;\n    settingName: string;\n    settingDescription: string;\n}\nexport const IndividualSetting: FunctionComponent<props> = ({\n    onChangeRoot,\n    isSettingOn,\n    settingName,\n    settingDescription,\n}) => {\n    return (\n        <div className=\"h-11 flex items-center\">\n            <input\n                name={settingName}\n                type=\"checkbox\"\n                onChange={onChangeRoot}\n                checked={isSettingOn}\n                className=\"form-checkbox h-6 w-6 text-red-600\"\n            />\n            <label htmlFor={settingName}>\n                <span className=\"ml-2 text-gray-700 text-lg align-middle\">\n                    {settingDescription}\n                </span>\n            </label>\n        </div>\n    );\n};\n","import { ChangeEvent, FunctionComponent } from \"react\";\nimport { motion } from \"framer-motion\";\n\nimport { FadeInOutVariants } from \"@Components/MotionVariants\";\nimport { useAppDispatch, useAppSelector } from \"@Redux/Hooks\";\nimport {\n    catchphraseOff,\n    catchphraseOn,\n} from \"@Redux/Reducers/SettingsReducer/Actions\";\nimport { IndividualSetting } from \"./IndividualSetting\";\n\ninterface SettingListInterface {\n    settingName: string;\n    settingDescription: string;\n    isActive: boolean;\n}\n\nconst CATCHPHRASE = \"catchphrase\";\n\nexport const Settings: FunctionComponent = () => {\n    const dispatch = useAppDispatch();\n\n    const isCatchphraseOn = useAppSelector(\n        (state) => state.SettingReducer.isCatchphraseOn\n    );\n    const toNotion = (): void => {\n        window.open(\n            \"https://iwannaberealnerd.notion.site/69e74b82e0e64f1790066e56659a3f08\"\n        );\n    };\n    // onChange Function\n    const onChangeRoot = (evt: ChangeEvent<HTMLInputElement>): void => {\n        const evtName = evt.target.name as \"catchphrase\";\n        const evtChkd = evt.target.checked as boolean;\n        if (evtName === CATCHPHRASE && evtChkd === true) {\n            dispatch(catchphraseOn());\n            return;\n        }\n        if (evtName === CATCHPHRASE && evtChkd === false) {\n            dispatch(catchphraseOff());\n        }\n    };\n\n    const settingsArr: SettingListInterface[] = [\n        {\n            settingName: CATCHPHRASE,\n            settingDescription: \"메인 페이지 캐치프레이즈 보기\",\n            isActive: isCatchphraseOn,\n        },\n    ];\n\n    return (\n        <motion.div {...FadeInOutVariants} className=\"w-64 sm:w-80 mx-auto\">\n            <button\n                type=\"button\"\n                className=\"whiteHover rounded-lg p-2 w-full mb-10\"\n                onClick={toNotion}\n            >\n                설명서로 이동!\n            </button>\n            {settingsArr.map((propsObj) => (\n                <IndividualSetting\n                    key={propsObj.settingDescription}\n                    onChangeRoot={onChangeRoot}\n                    isSettingOn={propsObj.isActive}\n                    settingName={propsObj.settingName}\n                    settingDescription={propsObj.settingDescription}\n                />\n            ))}\n        </motion.div>\n    );\n};\n","import { FadeInOutVariants } from \"@Components/MotionVariants\";\nimport { motion } from \"framer-motion\";\nimport { FunctionComponent } from \"react\";\nimport { useLocation } from \"react-router\";\n\nexport const NoMatch: FunctionComponent = () => {\n    const location = useLocation();\n    return (\n        <motion.div {...FadeInOutVariants}>\n            <h3>This is not available pages! {location.pathname}</h3>\n        </motion.div>\n    );\n};\n","import { FunctionComponent, SetStateAction } from \"react\";\n\ninterface NavButtonProps {\n    placeholderBefore: string;\n    placeholderAfter: string;\n    setIsBack: React.Dispatch<SetStateAction<boolean | null>>;\n}\n\nexport const NavButton: FunctionComponent<NavButtonProps> = ({\n    placeholderBefore,\n    placeholderAfter,\n    setIsBack,\n}) => {\n    return (\n        <div className=\"mb-5 flex justify-between\">\n            <button\n                type=\"button\"\n                className=\"grayBtn\"\n                onClick={() => setIsBack(true)}\n            >\n                &laquo;{placeholderBefore}\n            </button>\n            <button\n                type=\"button\"\n                className=\"grayBtn\"\n                onClick={() => setIsBack(false)}\n            >\n                {placeholderAfter}&raquo;\n            </button>\n        </div>\n    );\n};\n","import { FunctionComponent } from \"react\";\n\ninterface MenuIndicatorInterface {\n    menuName: string;\n}\n\nexport const MenuIndicator: FunctionComponent<MenuIndicatorInterface> = ({\n    menuName,\n}) => {\n    return (\n        <h2 className=\"font-semibold text-xl mb-2 ml-1 text-blue-700\">\n            {menuName}\n        </h2>\n    );\n};\n","import { MenuIndicator } from \"@Components/Pages\";\nimport { useAppDispatch, useAppSelector } from \"@Redux/Hooks\";\nimport {\n    writeDestination,\n    writeUrl,\n} from \"@Redux/Reducers/PlanReducer/Actions\";\nimport {\n    Dispatch,\n    FunctionComponent,\n    SetStateAction,\n    useEffect,\n    useState,\n} from \"react\";\nimport { useForm } from \"react-hook-form\";\n\ninterface DestinationCard {\n    setIsDestination: Dispatch<SetStateAction<boolean>>;\n}\n\ninterface SubmitWhereInterface {\n    destination: string;\n}\nconst destinationRegexp = /^.{2,35}$/;\n\nexport const DestinationCard: FunctionComponent<DestinationCard> = ({\n    setIsDestination,\n}) => {\n    const dispatch = useAppDispatch();\n    const destinationRedux = useAppSelector(\n        (state) => state.PlanReducer.destination\n    );\n\n    const defaultValue = destinationRedux ?? \"\";\n    const { register, handleSubmit, formState, setFocus } = useForm({\n        defaultValues: {\n            destination: defaultValue,\n        },\n    });\n\n    const [isReset, setIsReset] = useState(false);\n    const [buttonStatus, setButtonStatus] = useState(true);\n    const [buttonText, setButtonText] = useState(() => \"입력\");\n\n    const submitDestination = ({ destination }: SubmitWhereInterface): void => {\n        if (isReset) {\n            setIsReset(false);\n            dispatch(writeDestination(null));\n            dispatch(writeUrl(null));\n            setFocus(\"destination\");\n            return;\n        }\n        setIsReset(true);\n        dispatch(writeDestination(destination));\n    };\n\n    useEffect(() => {\n        const destinationCheck = (): boolean =>\n            formState.errors.destination?.type === \"required\";\n        const destinationPatternCheck = (): boolean =>\n            formState.errors.destination?.type === \"pattern\";\n\n        if (destinationCheck()) {\n            setButtonText(\"값을 입력해주세요.\");\n            setButtonStatus(false);\n            return;\n        }\n        if (destinationPatternCheck()) {\n            setButtonText(\"2글자 이상 입력해주세요.\");\n            setButtonStatus(false);\n            return;\n        }\n        if (destinationRedux !== null) {\n            setButtonText(\"재설정\");\n            setIsReset(true);\n            setIsDestination(true);\n            setButtonStatus(false);\n            return;\n        }\n        setButtonText(\"입력\");\n        setButtonStatus(true);\n        setIsDestination(false);\n        setIsReset(false);\n        setFocus(\"destination\");\n    }, [destinationRedux, formState, isReset, setIsDestination, setFocus]);\n\n    return (\n        <>\n            <MenuIndicator menuName=\"도착지\" />\n            <form onSubmit={handleSubmit(submitDestination)}>\n                <div className=\" relative rounded-lg bg-white overflow-hidden pt-5 pb-11 shadow-lg\">\n                    <div className=\"px-4\">\n                        <input\n                            {...register(\"destination\", {\n                                required: true,\n                                pattern: destinationRegexp,\n                            })}\n                            type=\"text\"\n                            disabled={isReset}\n                            placeholder=\"목적지\"\n                            className=\"mainInput px-5 pr-10 w-full block rounded-lg\"\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={`absolute mainBtn bottom-0 rounded-b-lg h-8 flex items-center justify-center w-full ${\n                            buttonStatus\n                                ? \"bg-blue-400 hover-hover:hover:bg-blue-300 active:bg-blue-500\"\n                                : \"bg-red-400 hover-hover:hover:bg-red-300 active:bg-red-500\"\n                        }`}\n                    >\n                        {buttonText}\n                    </button>\n                </div>\n            </form>\n        </>\n    );\n};\n","import { useAppDispatch, useAppSelector } from \"@Redux/Hooks\";\nimport { writeUrl } from \"@Redux/Reducers/PlanReducer/Actions\";\nimport { FunctionComponent, useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nexport interface SubmitWhereInterface {\n    url: string;\n}\nconst destinationRegexp = /^.{5,60}$/;\n\nexport const URLCard: FunctionComponent = () => {\n    const dispatch = useAppDispatch();\n    const urlRedux = useAppSelector((state) => state.PlanReducer.url);\n\n    const [isReset, setIsReset] = useState(false);\n    const [buttonStatus, setButtonStatus] = useState(true);\n    const [buttonText, setButtonText] = useState(\"입력\");\n\n    const defaultValue = urlRedux ?? \"\";\n    const { register, handleSubmit, formState, setFocus } = useForm({\n        defaultValues: {\n            url: defaultValue,\n        },\n    });\n\n    const submitUrlAddr = ({ url }: SubmitWhereInterface): void => {\n        if (isReset) {\n            setIsReset(false);\n            dispatch(writeUrl(null));\n            setFocus(\"url\");\n            return;\n        }\n        setIsReset(true);\n        dispatch(writeUrl(url));\n    };\n\n    useEffect(() => {\n        const urlAddrCheck = (): boolean =>\n            formState.errors.url?.type === \"required\";\n        const urlAddrPatternCheck = (): boolean =>\n            formState.errors.url?.type === \"pattern\";\n\n        if (urlAddrCheck()) {\n            setButtonText(\"값을 입력해주세요.\");\n            setButtonStatus(false);\n            return;\n        }\n        if (urlAddrPatternCheck()) {\n            setButtonText(\"5글자 이상 입력해주세요.\");\n            setButtonStatus(false);\n            return;\n        }\n        if (urlRedux !== null) {\n            setButtonText(\"재설정\");\n            setButtonStatus(false);\n            setIsReset(true);\n            return;\n        }\n        setButtonText(\"입력\");\n        setButtonStatus(true);\n        setIsReset(false);\n        setFocus(\"url\");\n    }, [formState, isReset, urlRedux, setFocus]);\n\n    return (\n        <>\n            <div className=\" mb-1 ml-1\">\n                <span className=\"font-semibold sm:text-xl mb-1 ml-1 text-blue-700\">\n                    네비게이션 공유 주소\n                </span>\n                <span className=\"text-gray-500\"> (필수 아님)</span>\n            </div>\n            <form onSubmit={handleSubmit(submitUrlAddr)}>\n                <div className=\"relative rounded-lg bg-white overflow-hidden pt-5 pb-11 shadow-lg\">\n                    <div className=\"px-4\">\n                        <input\n                            {...register(\"url\", {\n                                required: true,\n                                pattern: destinationRegexp,\n                            })}\n                            type=\"text\"\n                            disabled={isReset}\n                            placeholder=\"네비게이션 URL\"\n                            className=\"mainInput px-5 pr-10 w-full block rounded-lg\"\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={`absolute mainBtn bottom-0 rounded-b-lg h-8 flex items-center justify-center w-full ${\n                            buttonStatus\n                                ? \"bg-blue-400 hover-hover:hover:bg-blue-300 active:bg-blue-500\"\n                                : \"bg-red-400 hover-hover:hover:bg-red-300 active:bg-red-500\"\n                        }`}\n                    >\n                        {buttonText}\n                    </button>\n                </div>\n            </form>\n        </>\n    );\n};\n","import { ModalBlurBg } from \"@Components/ModalBlurBg\";\nimport { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { createPortal } from \"react-dom\";\n\ninterface ModalExplainInterface {\n    setIsExplain: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const ModalExplain: FunctionComponent<ModalExplainInterface> = ({\n    setIsExplain,\n}) => {\n    const closeFunc = (): void => {\n        setIsExplain(false);\n    };\n    return createPortal(\n        <ModalBlurBg closeFunc={closeFunc}>콘텐츠</ModalBlurBg>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { FunctionComponent, useEffect, useState } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { slideVariants } from \"@Components/MotionVariants\";\nimport { NavButton } from \"@Components/Pages/WritePlan\";\nimport { useHistory, useLocation } from \"react-router\";\nimport { DestinationCard } from \"./InputCards/DestinationCard\";\nimport { URLCard } from \"./InputCards/URLCard\";\nimport { ModalExplain } from \"./ModalExplain\";\n\nexport const Where: FunctionComponent = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const [isExplain, setIsExplain] = useState(false);\n    const [isDestination, setIsDestination] = useState(false);\n    const [isBack, setIsBack] = useState<boolean | null>(null);\n\n    // Animation related code\n    useEffect(() => {\n        if (isBack === null) return;\n        if (isBack) {\n            history.push(\"\");\n            return;\n        }\n        if (!isBack) {\n            history.push(\"2when\");\n        }\n    }, [isBack, history]);\n\n    return (\n        <motion.div\n            variants={slideVariants}\n            initial={location.state === true ? \"hiddenFromBack\" : \"hidden\"}\n            exit={\n                isBack !== null && isBack !== true\n                    ? \"slideExit\"\n                    : \"slideBackExit\"\n            }\n            animate=\"visible\"\n            className=\"w-64 sm:w-80 mx-auto\"\n        >\n            {isExplain && <ModalExplain setIsExplain={setIsExplain} />}\n            <NavButton\n                placeholderBefore=\"홈으로\"\n                placeholderAfter=\"날짜\"\n                setIsBack={setIsBack}\n            />\n            <DestinationCard\n                key=\"destinationKey\"\n                setIsDestination={setIsDestination}\n            />\n            <AnimatePresence exitBeforeEnter>\n                {isDestination && (\n                    <motion.div\n                        variants={slideVariants}\n                        initial={\n                            location.state !== null\n                                ? \"hiddenFromBack\"\n                                : \"hidden\"\n                        }\n                        exit=\"slideBackExit\"\n                        animate=\"visible\"\n                        key=\"urlkey\"\n                        className=\"mt-5\"\n                    >\n                        <URLCard />\n                    </motion.div>\n                )}\n            </AnimatePresence>\n        </motion.div>\n    );\n};\n","import { useAppDispatch } from \"@Redux/Hooks\";\nimport { writeEndDate } from \"@Redux/Reducers/PlanReducer/Actions\";\nimport { Dispatch, FunctionComponent, SetStateAction } from \"react\";\n\ninterface TourLengthInterface {\n    setIsOneDay: Dispatch<SetStateAction<boolean>>;\n    isOneDay: boolean;\n}\n\nexport const TourLength: FunctionComponent<TourLengthInterface> = ({\n    setIsOneDay,\n    isOneDay,\n}) => {\n    const dispatch = useAppDispatch();\n\n    return (\n        <div className=\"w-full shadow-lg rounded-lg overflow-hidden mt-5 mb-7\">\n            <button\n                onClick={() => {\n                    setIsOneDay(true);\n                    dispatch(writeEndDate(null));\n                }}\n                className={`transition duration-300 h-12 w-1/2 border-l ${\n                    isOneDay\n                        ? \"bg-blue-400 hover-hover:hover:bg-blue-300  active:bg-blue-500 hover-hover:active:bg-blue-500\"\n                        : \"bg-gray-400 text-gray-500 hover-hover:hover:bg-gray-300 hover-hover:hover:text-black hover-hover:active:bg-gray-500 active:bg-gray-500\"\n                } `}\n                type=\"button\"\n            >\n                당일투어\n            </button>\n            <button\n                onClick={() => {\n                    setIsOneDay(false);\n                }}\n                className={`transition duration-300 h-12 w-1/2 border-r ${\n                    isOneDay\n                        ? \"bg-gray-400 text-gray-500 hover-hover:hover:bg-gray-300 hover-hover:hover:text-black hover-hover:active:bg-gray-500 active:bg-gray-500\"\n                        : \"bg-blue-400 hover-hover:hover:bg-blue-300  active:bg-blue-500 hover-hover:active:bg-blue-500\"\n                }`}\n                type=\"submit\"\n            >\n                박투어\n            </button>\n        </div>\n    );\n};\n","import { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport DatePicker from \"react-datepicker\";\nimport { ModalBlurBg } from \"@Components/ModalBlurBg\";\nimport { slideBackAnimation } from \"@Components/MotionVariants\";\n\ninterface CalenderInterface {\n    handleChange(selectedData: Date): void;\n    date: Date;\n    setIsCalenderOpen: Dispatch<SetStateAction<boolean>>;\n    setCalenderMsg: Dispatch<SetStateAction<string | null>>;\n    calenderMsg: string | null;\n}\n\nexport const Calender: FunctionComponent<CalenderInterface> = ({\n    handleChange,\n    date,\n    setIsCalenderOpen,\n    calenderMsg,\n    setCalenderMsg,\n}) => {\n    const closeFunc = (): void => {\n        setIsCalenderOpen(false);\n        setCalenderMsg(null);\n    };\n    return createPortal(\n        <ModalBlurBg closeFunc={closeFunc}>\n            <div className=\"relative top-1/4 left-1/2 w-min transform -translate-x-1/2\">\n                <DatePicker selected={date} onChange={handleChange} inline />\n                <AnimatePresence exitBeforeEnter>\n                    {calenderMsg && (\n                        <motion.div\n                            {...slideBackAnimation}\n                            className=\"bg-gray-200 rounded-lg flex justify-center\"\n                        >\n                            <span className=\"text-red-500\">{calenderMsg}</span>\n                        </motion.div>\n                    )}\n                </AnimatePresence>\n            </div>\n        </ModalBlurBg>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { AnimatePresence } from \"framer-motion\";\nimport { FunctionComponent, useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"@Redux/Hooks\";\nimport { writeStartDate } from \"@Redux/Reducers/PlanReducer/Actions\";\nimport { MenuIndicator } from \"@Components/Pages\";\nimport { Calender } from \"../Calender\";\n\nexport const StartDate: FunctionComponent = () => {\n    const dispatch = useAppDispatch();\n\n    const [isCalenderOpen, setIsCalenderOpen] = useState(false);\n    const [calenderMsg, setCalenderMsg] = useState<null | string>(null);\n\n    const startDate = useAppSelector((state) => state.PlanReducer.startDate);\n    const [startDateMsg, setStartDateMsg] = useState(\"\");\n\n    const isDateLaterThanNow = (selectedData: Date): boolean =>\n        (selectedData.getFullYear() < new Date().getFullYear() &&\n            selectedData.getMonth() < new Date().getMonth()) ||\n        selectedData.getDate() < new Date().getDate();\n    const startHandleChange = (selectedData: Date): void => {\n        if (isDateLaterThanNow(selectedData)) {\n            setCalenderMsg(\n                `오늘(${new Date().getDate()}) 이후 날짜로 설정해주세요`\n            );\n            dispatch(writeStartDate(null));\n            return;\n        }\n        setCalenderMsg(null);\n        setIsCalenderOpen(false);\n        dispatch(writeStartDate(selectedData));\n    };\n\n    useEffect(() => {\n        if (startDate === null) {\n            setStartDateMsg(\"클릭 - 날짜를 선택해주세요\");\n            return;\n        }\n        setStartDateMsg(\n            () =>\n                `${startDate?.getFullYear()}년${\n                    (startDate?.getMonth() as number) + 1\n                }월 ${startDate?.getDate()}일`\n        );\n    }, [dispatch, startDate]);\n\n    return (\n        <div className=\"mb-6\">\n            <MenuIndicator menuName=\"출발일\" />\n            <button\n                type=\"button\"\n                className=\"w-full h-16 bg-white hover-hover:hover:bg-gray-300 transition duration-300 rounded-lg shadow-lg\"\n                onClick={() => {\n                    setIsCalenderOpen(true);\n                }}\n            >\n                {startDateMsg}\n            </button>\n            <AnimatePresence exitBeforeEnter>\n                {isCalenderOpen && (\n                    <Calender\n                        date={startDate === null ? new Date() : startDate}\n                        handleChange={startHandleChange}\n                        setIsCalenderOpen={setIsCalenderOpen}\n                        setCalenderMsg={setCalenderMsg}\n                        calenderMsg={calenderMsg}\n                    />\n                )}\n            </AnimatePresence>\n        </div>\n    );\n};\n","import { AnimatePresence, motion } from \"framer-motion\";\nimport { FunctionComponent, useEffect, useState } from \"react\";\nimport { useAppDispatch, useAppSelector } from \"@Redux/Hooks\";\nimport { writeEndDate } from \"@Redux/Reducers/PlanReducer/Actions\";\nimport { FadeInOutVariants } from \"@Components/MotionVariants\";\nimport { MenuIndicator } from \"@Components/Pages\";\nimport { Calender } from \"../Calender\";\n\nexport const EndDate: FunctionComponent = () => {\n    const dispatch = useAppDispatch();\n\n    const [isCalenderOpen, setIsCalenderOpen] = useState(false);\n    const [calenderMsg, setCalenderMsg] = useState<null | string>(null);\n\n    const startDate = useAppSelector(\n        (state) => state.PlanReducer.startDate as Date\n    );\n    const endDate = useAppSelector((state) => state.PlanReducer.endDate);\n\n    const [endDateMsg, setEndDateMsg] = useState(\"\");\n\n    const isDateLaterThanStart = (selectedData: Date): boolean =>\n        selectedData < startDate;\n\n    const endHandleChange = (selectedData: Date): void => {\n        if (isDateLaterThanStart(selectedData)) {\n            setCalenderMsg(\n                `오늘(${new Date().getDate()}) 이후 날짜로 설정해주세요`\n            );\n            dispatch(writeEndDate(null));\n            return;\n        }\n        setCalenderMsg(null);\n        setIsCalenderOpen(false);\n        dispatch(writeEndDate(selectedData));\n    };\n\n    // endDate SideEffect code\n    useEffect(() => {\n        if (endDate === null) {\n            setEndDateMsg(\"클릭 - 날짜를 선택해주세요\");\n            return;\n        }\n        setEndDateMsg(\n            () =>\n                `${endDate?.getFullYear()}년${\n                    (endDate?.getMonth() as number) + 1\n                }월 ${endDate?.getDate()}일`\n        );\n    }, [dispatch, endDate]);\n\n    return (\n        <motion.div {...FadeInOutVariants}>\n            <MenuIndicator menuName=\"도착일\" />\n            <button\n                type=\"button\"\n                className=\"whiteHover w-full h-16 bg-white rounded-lg shadow-lg\"\n                onClick={() => {\n                    setIsCalenderOpen(true);\n                }}\n            >\n                {endDateMsg}\n            </button>\n            <AnimatePresence exitBeforeEnter>\n                {isCalenderOpen && (\n                    <Calender\n                        date={endDate === null ? (startDate as Date) : endDate}\n                        handleChange={endHandleChange}\n                        setIsCalenderOpen={setIsCalenderOpen}\n                        setCalenderMsg={setCalenderMsg}\n                        calenderMsg={calenderMsg}\n                    />\n                )}\n            </AnimatePresence>\n        </motion.div>\n    );\n};\n","import { slideVariants } from \"@Components/MotionVariants\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { FunctionComponent, useEffect, useState } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { useAppSelector } from \"@Redux/Hooks\";\nimport { NavButton } from \"@Components/Pages/WritePlan\";\n\nimport { TourLength } from \"./TourLength\";\nimport { EndDate, StartDate } from \"./DateCard\";\n\nexport const When: FunctionComponent = () => {\n    const history = useHistory();\n    const location = useLocation();\n\n    const endDate = useAppSelector((state) => state.PlanReducer.endDate);\n    const [isOneDay, setIsOneDay] = useState(true);\n\n    const [isBack, setIsBack] = useState<boolean | null>(null);\n\n    useEffect(() => {\n        if (endDate !== null) {\n            setIsOneDay(false);\n        }\n    }, [endDate]);\n\n    // Back and forth animation control code\n    useEffect(() => {\n        if (isBack === null) return;\n        if (isBack) {\n            history.push({ pathname: \"1where\", state: true });\n            return;\n        }\n        if (!isBack) {\n            history.push(\"3who\");\n        }\n    }, [isBack, history]);\n\n    return (\n        <motion.div\n            variants={slideVariants}\n            initial={location.state === true ? \"hiddenFromBack\" : \"hidden\"}\n            animate=\"visible\"\n            exit={isBack ? \"slideBackExit\" : \"slideExit\"}\n            className=\"w-64 sm:w-80 mx-auto\"\n        >\n            <NavButton\n                placeholderBefore=\"장소\"\n                placeholderAfter=\"인원정보\"\n                setIsBack={setIsBack}\n            />\n            <TourLength setIsOneDay={setIsOneDay} isOneDay={isOneDay} />\n            <StartDate />\n\n            <AnimatePresence exitBeforeEnter>\n                {!isOneDay && <EndDate />}\n            </AnimatePresence>\n        </motion.div>\n    );\n};\n","import {\n    FieldValues,\n    UseFormRegister,\n} from \"node_modules/react-hook-form/dist\";\nimport { FunctionComponent } from \"react\";\n\ninterface NameInputInterface {\n    editName?: string;\n    register: UseFormRegister<FieldValues>;\n}\n\nconst nameRegexp = /^.{2,10}$/;\n\nexport const NameInput: FunctionComponent<NameInputInterface> = ({\n    editName,\n    register,\n}) => {\n    return (\n        <>\n            <input\n                {...register(\"name\", {\n                    required: true,\n                    pattern: nameRegexp,\n                })}\n                type=\"text\"\n                className=\"mainInput rounded-md my-1 mr-2 sm:w-5/12 w-20\"\n                placeholder=\"이름\"\n                defaultValue={editName}\n            />\n        </>\n    );\n};\nconst defaultProps = { editName: undefined };\nNameInput.defaultProps = defaultProps;\n","import { FunctionComponent } from \"react\";\nimport {\n    FieldValues,\n    UseFormRegister,\n} from \"node_modules/react-hook-form/dist\";\nimport { genreArr, classArr } from \"@Components/Functions\";\n\ninterface SelectBoxInterface {\n    editBikeClass?: number[] | null;\n    register: UseFormRegister<FieldValues>;\n}\n\nexport const SelectBox: FunctionComponent<SelectBoxInterface> = ({\n    register,\n    editBikeClass,\n}) => {\n    return (\n        <select\n            {...register(\"bikeClass\", { required: true })}\n            defaultValue={\n                editBikeClass !== null && editBikeClass !== undefined\n                    ? String(editBikeClass[0]) + String(editBikeClass[1])\n                    : \"\"\n            }\n            className=\"mainInput ml-2 rounded-md w-28 sm:w-6/12 my-1 right-0 absolute\"\n        >\n            <option value=\"\">차종 미정</option>\n            {genreArr.map((genre, gIndex) => (\n                <optgroup label={genre} key={genre}>\n                    {classArr.map((bikeClass: string, cIndex) => {\n                        const optionValue = `${gIndex}${cIndex}`;\n                        return (\n                            <option\n                                value={optionValue}\n                                key={`${String(gIndex)}${String(cIndex)}class`}\n                            >\n                                {bikeClass}\n                            </option>\n                        );\n                    })}\n                </optgroup>\n            ))}\n        </select>\n    );\n};\nconst defaultProps = { editBikeClass: null };\nSelectBox.defaultProps = defaultProps;\n","import {\n    FieldValues,\n    UseFormRegister,\n} from \"node_modules/react-hook-form/dist\";\nimport { FunctionComponent } from \"react\";\n\ninterface TelInputInterface {\n    editTel?: number;\n    register: UseFormRegister<FieldValues>;\n}\n\nconst telRegexp = /^.[0-9]{7,13}$/;\n\nexport const TelInput: FunctionComponent<TelInputInterface> = ({\n    editTel,\n    register,\n}) => {\n    return (\n        <input\n            {...register(\"tel\", {\n                required: true,\n                pattern: telRegexp,\n            })}\n            type=\"tel\"\n            className=\"mainInput rounded-md h-9 w-40 sm:w-7/12 my-1 block\"\n            placeholder=\"휴대폰 번호\"\n            defaultValue={editTel}\n        />\n    );\n};\nconst defaultProps = { editTel: undefined };\nTelInput.defaultProps = defaultProps;\n","import { useState, FunctionComponent, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { useAppSelector } from \"@Redux/Hooks\";\nimport { SubmitWhoInterface } from \"../Interface\";\nimport { NameInput } from \"./NameInput\";\nimport { SelectBox } from \"./SelectBox\";\nimport { TelInput } from \"./TelInput\";\n\ninterface WriteInfoInterface {\n    riderIndex?: number;\n    submitFunc({ name, tel, bikeClass }: SubmitWhoInterface): void;\n}\n\n// const defaultProps =\nexport const WriteInfo: FunctionComponent<WriteInfoInterface> = ({\n    riderIndex,\n    submitFunc,\n}) => {\n    const riderInfoArr = useAppSelector((state) => state.PlanReducer.userInfo);\n\n    const { register, handleSubmit, formState, reset, setFocus } = useForm();\n    const [errorText, setErrorText] = useState(\"\");\n    const [buttonText, setButtonText] = useState(\"입력\");\n\n    useEffect(() => {\n        const isSubmitSuccessful = (): boolean => formState.isSubmitSuccessful;\n        const requiredCheck = (): boolean => {\n            return (\n                (formState.errors.name?.type === \"required\" ||\n                    formState.errors.tel?.type === \"required\" ||\n                    formState.errors.bikeClass?.type === \"required\") &&\n                formState.isSubmitted\n            );\n        };\n        const namePatternCheck = (): boolean =>\n            formState.errors.name?.type === \"pattern\" && formState.isSubmitted;\n        const phonePatternCheck = (): boolean =>\n            formState.errors.tel?.type === \"pattern\" && formState.isSubmitted;\n\n        if (isSubmitSuccessful()) {\n            setFocus(\"name\");\n            reset();\n        }\n        if (phonePatternCheck()) {\n            setErrorText(\"전화번호가 너무 길거나 짧습니다 - 7자~13자\");\n            return;\n        }\n        if (namePatternCheck()) {\n            setErrorText(\"이름은 2자에서 10자 사이로 입력해주세요\");\n            return;\n        }\n        if (requiredCheck()) {\n            setErrorText(\"모든 입력값을 입력해주세요\");\n            return;\n        }\n        if (formState.isSubmitted) {\n            setErrorText(\"입력을 클릭해주세요\");\n        }\n        setErrorText(\"\");\n    }, [formState, reset, setFocus]);\n\n    useEffect(() => {\n        if (riderIndex === undefined) {\n            setButtonText(\"입력\");\n            return;\n        }\n        if (riderIndex !== undefined) {\n            setButtonText(\"수정\");\n        }\n    }, [riderIndex]);\n\n    return (\n        <div className=\" w-full bg-white rounded-lg  shadow-lg relative \">\n            <form onSubmit={handleSubmit(submitFunc)}>\n                <div className=\"px-4 pb-10 pt-8 relative\">\n                    <div className=\"w-full absolute top-0 left-0 flex justify-center items-center rounded-t-lg h-8\">\n                        <p className=\"text-gray-500 transition animate-pulse\">\n                            {errorText}\n                        </p>\n                    </div>\n                    <div className=\"relative\">\n                        <NameInput\n                            register={register}\n                            editName={riderInfoArr[riderIndex as number]?.name}\n                        />\n                        <SelectBox\n                            register={register}\n                            editBikeClass={\n                                riderInfoArr[riderIndex as number]?.bikeClass\n                            }\n                        />\n                    </div>\n                    <TelInput\n                        register={register}\n                        editTel={riderInfoArr[riderIndex as number]?.tel}\n                    />\n                    <div className=\"absolute bottom-0 left-0 w-full rounded-b-lg\">\n                        <button\n                            type=\"submit\"\n                            className=\"mainBtn h-8 w-1/2 rounded-none rounded-bl-lg hover-hover:hover:bg-blue-300 active:bg-blue-500\"\n                        >\n                            {buttonText}\n                        </button>\n                        <button\n                            type=\"button\"\n                            onClick={() => reset()}\n                            className=\"transition duration-300 h-8 bg-red-400 hover-hover:hover:bg-red-300 rounded-none w-1/2 rounded-br-lg\"\n                        >\n                            초기화\n                        </button>\n                    </div>\n                </div>\n            </form>\n        </div>\n    );\n};\nWriteInfo.defaultProps = {\n    riderIndex: undefined,\n};\n","import { Dispatch, FunctionComponent, SetStateAction } from \"react\";\nimport { createPortal } from \"react-dom\";\n\nimport { editRiderInfo } from \"@Redux/Reducers/PlanReducer/Actions\";\nimport { ModalBlurBg } from \"@Components/ModalBlurBg\";\nimport { useAppDispatch } from \"@Redux/Hooks\";\n\nimport { WriteInfo } from \"../WriteInfo\";\nimport { SubmitWhoInterface } from \"../Interface\";\n\ninterface EditInfoInterface {\n    setIsEditingInfo: Dispatch<SetStateAction<boolean>>;\n    riderIndex: number;\n}\n\nexport const EditInfo: FunctionComponent<EditInfoInterface> = ({\n    setIsEditingInfo,\n    riderIndex,\n}) => {\n    const dispatch = useAppDispatch();\n    const submitEditedRiderInfo = ({\n        name,\n        tel,\n        bikeClass,\n    }: SubmitWhoInterface): void => {\n        const bikeClassArr: number[] = [\n            Number(bikeClass[0]),\n            Number(bikeClass[1]),\n        ];\n        dispatch(editRiderInfo(name, tel, bikeClassArr, riderIndex));\n        setIsEditingInfo(false);\n    };\n\n    const closeFunc = (): void => {\n        setIsEditingInfo(false);\n    };\n\n    return createPortal(\n        <ModalBlurBg closeFunc={closeFunc}>\n            <div className=\"relative w-64 sm:w-80 mx-auto top-1/4\">\n                <WriteInfo\n                    riderIndex={riderIndex}\n                    submitFunc={submitEditedRiderInfo}\n                />\n            </div>\n        </ModalBlurBg>,\n        document.getElementById(\"modalDiv\") as HTMLElement\n    );\n};\n","import { FunctionComponent, useState } from \"react\";\nimport { AnimatePresence, motion } from \"framer-motion\";\nimport { slideBackAnimation } from \"@Components/MotionVariants\";\nimport { arrToBikeClass } from \"@Components/Functions/BikeClassRelated\";\nimport { EditInfo } from \"../EditInfo\";\n\ninterface InfoCardInterface {\n    riderInfo: {\n        name: string;\n        tel: number;\n        bikeClass: number[];\n    };\n    riderIndex: number;\n}\n\nexport const InfoCard: FunctionComponent<InfoCardInterface> = ({\n    riderInfo,\n    riderIndex,\n}) => {\n    const { name, tel, bikeClass } = riderInfo;\n    const [isEditingInfo, setIsEditingInfo] = useState(false);\n\n    const bikeInfo = arrToBikeClass(bikeClass);\n    const infoOnClick = (): void => {\n        setIsEditingInfo((prev) => !prev);\n    };\n\n    return (\n        <>\n            <AnimatePresence exitBeforeEnter>\n                <motion.div {...slideBackAnimation} onClick={infoOnClick}>\n                    <div className=\"whiteHover my-2 px-4 py-2 rounded-lg shadow-lg relative cursor-pointer w-64 sm:w-80 mx-auto\">\n                        <div className=\"block sm:flex sm:justify-between\">\n                            <span className=\"font-semibold block sm:inline\">\n                                {name}\n                            </span>\n                            <span className=\"text-gray-500\">{bikeInfo}</span>\n                        </div>\n                        <p>{tel}</p>\n                    </div>\n                </motion.div>\n\n                {/* display edit modal window */}\n            </AnimatePresence>\n            <AnimatePresence exitBeforeEnter>\n                {isEditingInfo && (\n                    <EditInfo\n                        setIsEditingInfo={setIsEditingInfo}\n                        riderIndex={riderIndex}\n                    />\n                )}\n            </AnimatePresence>\n        </>\n    );\n};\n","import { motion } from \"framer-motion\";\nimport { FunctionComponent, useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router\";\n\nimport { useAppDispatch, useAppSelector } from \"@Redux/Hooks\";\nimport { slideVariants } from \"@Components/MotionVariants\";\nimport { writeRiderInfo } from \"@Redux/Reducers/PlanReducer/Actions\";\nimport { NavButton } from \"@Components/Pages/WritePlan\";\nimport { MenuIndicator } from \"@Components/Pages\";\nimport { SubmitWhoInterface } from \"./Interface\";\nimport { WriteInfo } from \"./WriteInfo\";\nimport { InfoCard } from \"./InfoCard\";\n\nexport const Who: FunctionComponent = () => {\n    const dispatch = useAppDispatch();\n    const history = useHistory();\n\n    const [isBack, setIsBack] = useState<boolean | null>(null);\n    const riderInfoArr = useAppSelector((state) => state.PlanReducer.userInfo);\n\n    const Arr = riderInfoArr.slice(1, riderInfoArr.length);\n\n    const submitRiderInfo = ({\n        name,\n        tel,\n        bikeClass,\n    }: SubmitWhoInterface): void => {\n        const bikeClassArr: number[] = [\n            Number(bikeClass[0]),\n            Number(bikeClass[1]),\n        ];\n        dispatch(writeRiderInfo(name, tel, bikeClassArr));\n    };\n\n    useEffect(() => {\n        if (isBack === null) return;\n        if (isBack) {\n            history.push({ pathname: \"2when\", state: true });\n            return;\n        }\n        if (!isBack) {\n            history.push(\"/result\");\n        }\n    }, [isBack, history]);\n\n    return (\n        <motion.div\n            variants={slideVariants}\n            initial=\"hidden\"\n            animate=\"visible\"\n            exit={isBack ? \"slideBackExit\" : \"slideExit\"}\n            className=\"w-64 sm:w-80 mx-auto\"\n        >\n            <NavButton\n                placeholderBefore=\"날짜\"\n                placeholderAfter=\"결과페이지\"\n                setIsBack={setIsBack}\n            />\n            <MenuIndicator menuName=\"인원정보\" />\n            <div className=\"mb-5\">\n                <WriteInfo submitFunc={submitRiderInfo} />\n            </div>\n            {Arr.map((riderInfo, index) => {\n                const infoCardVal = `${index}-${riderInfo.name}`;\n                return (\n                    <InfoCard\n                        key={infoCardVal}\n                        riderInfo={riderInfo}\n                        riderIndex={index + 1}\n                    />\n                );\n            })}\n        </motion.div>\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { Switch, Route, useLocation, useRouteMatch } from \"react-router\";\n\nimport { NoMatch } from \"@Pages/NoMatch\";\nimport { Where } from \"./1where\";\nimport { When } from \"./2when\";\nimport { Who } from \"./3who\";\n\nexport const WritePlan: FunctionComponent = () => {\n    const { url } = useRouteMatch();\n    const location = useLocation();\n    console.log(\"hi\");\n    return (\n        <>\n            {/* sdifowjoief */}\n            <Switch location={location} key={location.key}>\n                <Route path={`${url}/1where`}>\n                    <Where />\n                </Route>\n                <Route path=\"/writeplan/2when\">\n                    <When />\n                </Route>\n                <Route path=\"/writeplan/3who\">\n                    <Who />\n                </Route>\n                <Route path=\"*\">\n                    <NoMatch />\n                </Route>\n            </Switch>\n        </>\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { menuElements } from \"@Components/TopNavBar/Menu\";\nimport { Link } from \"react-router-dom\";\n\nexport const SideNavBar: FunctionComponent = () => {\n    return (\n        <div className=\"fixed right-0 mt-24 mr-8 rounded-md shadow-lg bg-white invisible lg:visible z-10\">\n            {menuElements.map((menuObj) => (\n                <Link\n                    key={menuObj.menuName}\n                    to={menuObj.to}\n                    className=\"relative block px-4 py-2 text-gray-700 hover-hover:hover:bg-gray-200 hover-hover:active:bg-gray-300 active:bg-gray-300 text-center\"\n                >\n                    {menuObj.menuName}\n                </Link>\n            ))}\n        </div>\n    );\n};\n","import { FunctionComponent } from \"react\";\nimport { Switch, Route, useLocation } from \"react-router-dom\";\nimport { AnimatePresence } from \"framer-motion\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nimport { TopNav } from \"@Components/TopNavBar\";\nimport { Main } from \"@Pages/Main\";\nimport { Result } from \"@Pages/Result\";\nimport { Settings } from \"@Pages/Settings\";\nimport { NoMatch } from \"@Pages/NoMatch\";\nimport { WritePlan } from \"@Pages/Writeplan\";\nimport { SideNavBar } from \"@Components/SideNavBar\";\n\nconst App: FunctionComponent = () => {\n    const location = useLocation();\n    return (\n        <>\n            <TopNav />\n            <SideNavBar />\n            <div className=\"pt-24\">\n                <AnimatePresence exitBeforeEnter>\n                    <Switch location={location} key={location.key}>\n                        <Route path=\"/result\">\n                            <Result />\n                        </Route>\n                        <Route path=\"/writeplan\">\n                            <WritePlan />\n                        </Route>\n                        <Route path=\"/settings\">\n                            <Settings />\n                        </Route>\n                        <Route exact path=\"/\">\n                            <Main />\n                        </Route>\n                        <Route path=\"*\">\n                            <NoMatch />\n                        </Route>\n                    </Switch>\n                </AnimatePresence>\n            </div>\n        </>\n    );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport { persistStore } from \"redux-persist\";\nimport { store } from \"@Redux/Reducers\";\n\nimport \"./index.css\";\nimport App from \"./App\";\n\nconst persistor = persistStore(store);\n\nReactDOM.render(\n    <Router basename=\"WhoGoesFirst\">\n        <Provider store={store}>\n            <PersistGate loading={null} persistor={persistor}>\n                <App />\n            </PersistGate>\n        </Provider>\n    </Router>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}